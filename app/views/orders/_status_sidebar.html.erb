<div class="bg-base-100/50 rounded-lg border border-base-200 p-2 w-52 max-h-[calc(100vh-150px)] overflow-y-auto">
  <h3 class="text-sm font-medium text-base-content/60 mb-3">Statusy</h3>
  <div>
    <%= link_to orders_path(status: "all"), 
      class: "flex items-center p-2 gap-2 rounded-md hover:bg-base-100 transition-colors duration-150 #{params[:status] == 'all' || params[:status].blank? ? 'bg-primary/5 text-primary' : 'text-base-content/60'}" do %>
      <i class="fas fa-box text-xl"></i>
      <span class="text-xs">Wszystkie</span>
    <% end %>
    <!-- Ungrouped Statuses - displayed directly here -->
    <% @ungrouped_statuses.each do |order_status| %>
      <%= link_to orders_path(status: order_status.id), 
        class: "flex items-center gap-2 p-2 rounded-md hover:bg-base-100 transition-colors duration-150 #{params[:status] == order_status.id.to_s ? 'bg-primary/5 text-primary' : 'text-base-content/70'}" do %>
        <span class="text-[11px] bg-primary/5 text-white px-1.5 rounded-md min-w-[18.5px] min-h-[18.5px] flex items-center justify-center" style="background-color: <%= order_status.color %>">
          <% if @order_counts[order_status.id] > 0 %>
            <%= @order_counts[order_status.id] %>
          <% else %>
            -
          <% end %>
        </span>
        <span class="text-xs"><%= order_status.full_name %></span>
      <% end %>
    <% end %>
    <!-- Status Groups -->
    <% @order_status_groups.each do |group| %>
      <% group_order_count = group.order_statuses.sum { |status| @order_counts[status.id] } %>
      <details class="group" id="status-group-<%= group.id %>" data-group-id="<%= group.id %>" open>
        <summary class="flex items-center gap-2 p-2 rounded-md hover:bg-base-100 transition-colors duration-150 cursor-pointer list-none">
          <i class="fas fa-chevron-right text-xs transition-transform group-open:rotate-90"></i>
          <span class="text-xs font-medium flex-1"><%= group.name %></span>
          <%= link_to orders_path(status_group: group.id), 
            class: "text-[11px] bg-base-200 text-base-content px-1 rounded min-w-[16px] h-4 flex items-center justify-center hover:bg-primary/20 transition-colors #{params[:status_group] == group.id.to_s ? 'bg-primary/30' : ''}" do %>
            <%= group_order_count > 0 ? group_order_count : '-' %>
          <% end %>
        </summary>
        <div>
          <% group.order_statuses.order(:position).each do |order_status| %>
            <%= link_to orders_path(status: order_status.id), 
              class: "flex items-center gap-2 p-2 rounded-md hover:bg-base-100 transition-colors duration-150 #{params[:status] == order_status.id.to_s ? 'bg-primary/5 text-primary' : 'text-base-content/70'}" do %>
              <span class="text-[11px] bg-primary/5 text-white px-1.5 rounded-md min-w-[18.5px] min-h-[18.5px] flex items-center justify-center" style="background-color: <%= order_status.color %>">
                <% if @order_counts[order_status.id] > 0 %>
                  <%= @order_counts[order_status.id] %>
                <% else %>
                  -
                <% end %>
              </span>
              <span class="text-xs"><%= order_status.full_name %></span>
            <% end %>
          <% end %>
        </div>
      </details>
    <% end %>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize collapsed state for each status group
    const statusGroups = document.querySelectorAll('details[data-group-id]');

    statusGroups.forEach(function(detailsElement) {
      const groupId = detailsElement.getAttribute('data-group-id');
      const storageKey = `status-group-${groupId}-collapsed`;
      const isCollapsed = localStorage.getItem(storageKey) === 'true';

      if (isCollapsed) {
        detailsElement.removeAttribute('open');
      } else {
        detailsElement.setAttribute('open', '');
      }
    });

    // Add event listeners to save state when toggled
    statusGroups.forEach(function(detailsElement) {
      const groupId = detailsElement.getAttribute('data-group-id');
      const storageKey = `status-group-${groupId}-collapsed`;

      detailsElement.addEventListener('toggle', function() {
        const isCollapsed = !detailsElement.hasAttribute('open');
        localStorage.setItem(storageKey, isCollapsed.toString());
      });
    });
  });
</script>
