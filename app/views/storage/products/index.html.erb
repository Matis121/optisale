<% content_for :title, "Produkty" %>
<%= render Ui::Layout::Container::DefaultComponent.new do %>
  <%= render Ui::Storage::Settings::TabsComponent.new %>
  <!-- Compact Filters & Actions -->
  <div class="bg-base-200 rounded-lg border border-base-200 p-3 my-8">
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-3">
      <!-- Quick filters -->
      <div class="flex flex-wrap items-center gap-3">
        <!-- Katalog (tylko jeśli więcej niż jeden) -->
        <% if current_user.catalogs.count > 1 %>
          <%= form_with url: update_current_catalog_in_session_storage_products_path, method: :post, class: "form-control" do |f| %>
            <%= f.label :catalog_id, "Katalog", class: "label" %>
            <%= f.select :catalog_id, options_from_collection_for_select(current_user.catalogs, :id, :name, @current_catalog.id), {}, { class: "input", onchange: 'this.form.submit()' } %>
          <% end %>
        <% end %>
        <!-- Magazyn (tylko jeśli więcej niż jeden) -->
        <% if @current_catalog.warehouses.count > 1 %>
          <%= form_with url: update_current_warehouse_in_session_storage_products_path, method: :post, class: "form-control" do |f| %>
            <%= f.label :warehouse_id, "Magazyn", class: "label" %>
            <% options = @current_catalog.warehouses.map { |w| [w.name, w.id] } %>
            <% options.unshift(['Wszystkie stany', 'all']) %>
            <%= f.select :warehouse_id, options_for_select(options, @current_warehouse&.id || 'all'), {}, { class: "input", onchange: 'this.form.submit()' } %>
          <% end %>
        <% end %>
        <!-- Grupa cenowa (tylko jeśli więcej niż jeden) -->
        <% if @current_catalog.price_groups.count > 1 %>
          <%= form_with url: update_current_price_group_in_session_storage_products_path, method: :post, class: "form-control" do |f| %>
            <%= f.label :price_group_id, "Grupa cenowa", class: "label" %>
            <%= f.select :price_group_id, options_from_collection_for_select(@current_catalog.price_groups, :id, :name, @current_price_group.id), {}, { class: "input", onchange: 'this.form.submit()' } %>
          <% end %>
        <% end %>
        <!-- Advanced filters toggle -->
      </div>
      <!-- Actions -->
      <div class="flex items-center gap-2">
        <button type="button" onclick="toggleFilters()" class="btn btn-ghost btn-xs gap-2">
          <i class="fas fa-filter text-xs"></i>
          <span id="filter-text">Filtry</span>
          <i class="fas fa-chevron-down text-xs transition-transform duration-200" id="filter-icon"></i>
        </button>
        <%= link_to new_storage_product_path, class: "btn btn-primary btn-sm gap-2", data: { turbo_frame: "modal-frame" } do %>
          <i class="fas fa-plus"></i>
          Nowy produkt
        <% end %>
      </div>
    </div>
    <!-- Filters -->
    <%= render FiltersComponent.new(query: @q, url: storage_products_path, turbo_frame: "products_frame", id: "filters-form") do %>
      <%= filter_text :id_eq, "ID", @q, placeholder: "123" %>
      <%= filter_text :name_cont, "Nazwa produktu", @q %>
      <%= filter_text :sku_cont, "SKU", @q %>
      <%= filter_text :ean_cont, "EAN", @q %>
      <%= filter_number :tax_rate_eq, "Stawka VAT", @q, step: 0.01 %>
    <% end %>
  </div>
  <!-- Content -->
  <div id="products" class="min-w-full">
    <%= turbo_frame_tag "products_frame" do %>
      <%= render partial: "storage/products/table", locals: { products: @products } %>
    <% end %>
  </div>
<% end %>